<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-au" xml:lang="en-au" class="_Skins__global_sidenav_sidenav" data-mc-search-type="Stem" data-mc-help-system-file-name="index.xml" data-mc-path-to-help-system="../../../" data-mc-output-analytics-server="https://prontosoftwareptyltd.api.madcapcentral.com/" data-mc-output-analytics-topic-id="1xBCeJNnhjBdfvY8LHA1MewwzI3Vn4TuHRN21QTXxuUDHZLqJix68slCgwMKq0CRn4VkNP+1F3ZPawxfTvnQfMRutxpw3D0j1Sf2rpGuiqR/AVemCAVIyS2SmgWBaWa5sOmo6EaCa8ZZwCxOeUWjlBrmW2HCehlk" data-mc-has-content-body="True" data-mc-toc-path="[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon-16x16.png" /><title>SELECT clause</title>
        <meta http-equiv="Cache-control" content="no-cache" />
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../_global/resources/css/sidenav/sdk-special-overrides.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.topic-ratings-button
{
	-pie-background: transparent url('../../../Skins/Default/Stylesheets/Images/star-full.png') no-repeat center center;
}

.button.remove-highlight-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.expand-all-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.print-expanded-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.email-tct-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.needs-pie
{
	behavior: url('../../../Resources/Scripts/PIE.htc');
}

</style>
        <link rel="apple-touch-icon" sizes="180x180" href="../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../_global/resources/masterpage/sidenav/scripts/responsive-tables.js">
        </script>
        <script type="text/javascript" src="../../../Skins/Default/Scripts/_global/sidenav/sidenav-toolbar.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-device-width: 1000px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../_home/sidenav/sidenav-home-sdk.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search..." />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="Filter your results by subject area." role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">Filter your results by subject area.</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <div class="row collapse">
                                        <div class="top-bar">
                                            <div class="buttons popup-container clearfix topicToolbarProxy _Skins__global_sidenav_sidenav_toolbar mc-component nocontent" style="mc-topic-toolbar-items: ;">
                                                <div class="button-group-container-left">
                                                    <div class="button-group star-buttons loading feedback-topic-required">
                                                        <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                            <div role="img" class="button-icon-wrapper" aria-label="Click a star to rate this topic" data-state1-alt="Click a star to rate this topic" data-state2-alt="Click a star to rate this topic">
                                                                <div class="button-icon"> </div>
                                                            </div>
                                                        </div>
                                                        <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                            <div role="img" class="button-icon-wrapper" aria-label="Click a star to rate this topic" data-state1-alt="Click a star to rate this topic" data-state2-alt="Click a star to rate this topic">
                                                                <div class="button-icon"> </div>
                                                            </div>
                                                        </div>
                                                        <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                            <div role="img" class="button-icon-wrapper" aria-label="Click a star to rate this topic" data-state1-alt="Click a star to rate this topic" data-state2-alt="Click a star to rate this topic">
                                                                <div class="button-icon"> </div>
                                                            </div>
                                                        </div>
                                                        <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                            <div role="img" class="button-icon-wrapper" aria-label="Click a star to rate this topic" data-state1-alt="Click a star to rate this topic" data-state2-alt="Click a star to rate this topic">
                                                                <div class="button-icon"> </div>
                                                            </div>
                                                        </div>
                                                        <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                            <div role="img" class="button-icon-wrapper" aria-label="Click a star to rate this topic" data-state1-alt="Click a star to rate this topic" data-state2-alt="Click a star to rate this topic">
                                                                <div class="button-icon"> </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <button class="button needs-pie remove-highlight-button" title="Remove highlights">
                                                        <div>
                                                            <div role="img" class="button-icon-wrapper" aria-label="Remove highlights">
                                                                <div class="button-icon"> </div>
                                                            </div>
                                                        </div>
                                                    </button>
                                                    <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                        <div>
                                                            <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                                <div class="button-icon"> </div>
                                                            </div>
                                                        </div>
                                                    </button>
                                                    <button class="button needs-pie print-expanded-button" onclick="MadCap.TextEffects.TextEffectControl.ExpandAll(&quot;open&quot;); setTimeout(function(){ window.print(); }, 1500);" title="Print this topic">
                                                        <div>
                                                            <div role="img" class="button-icon-wrapper">
                                                                <div class="button-icon"> </div>
                                                            </div>
                                                        </div>
                                                    </button>
                                                    <button class="button needs-pie email-tct-button" onclick="document.location.href=&quot;mailto:pronto.edu@pronto.net?subject=Help feedback for &quot;+document.title+&quot;&amp;body=Topic: &quot;+ location.href + &quot;%0A%0AComments:%0A%0A&quot;;" title="Email us with feedback about this topic">
                                                        <div>
                                                            <div role="img" class="button-icon-wrapper">
                                                                <div class="button-icon"> </div>
                                                            </div>
                                                        </div>
                                                    </button>
                                                </div>
                                            </div>
                                            <div id="breadcrumbs">
                                                <div class="nocontent">
                                                    <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="10" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                                    </div>
                                                </div>
                                            </div>
                                            <script src="../../_global/resources/masterpage/sidenav/scripts/back-to-top.js">
                                            </script><a name="top"></a><a class="back-to-top-button" href="#top"></a>
                                        </div>
                                        <script src="../../_global/resources/masterpage/sidenav/scripts/responsive-tables.js">
                                        </script>
                                        <div class="content-box">
                                            <div class="left-content column">
                                                <div role="main" id="mc-main-content">
                                                    <h1 data-mc-conditions="IDE_Extract.IDE_4GL_Exclude" id="SELECTclause" data-magellan-target="SELECTclause">SELECT clause</h1><a name="aanchor718"></a>
                                                    <MadCap:concept term="4GL Programming" data-mc-conditions="_global/target-type.online" /><a name="aanchor719"></a>
                                                    <MadCap:concept term="databasesql" data-mc-conditions="_global/target-type.online" /><a name="aanchor720"></a>
                                                    <MadCap:concept term="subquery" data-mc-conditions="_global/target-type.online" />
                                                    <p data-mc-conditions="IDE_Extract.IDE_4GL_Exclude">The SELECT clauses supported by the <span class="mc-variable _global/product.pxi variable">Pronto&#160;Xi</span> RAD 4GL language are based substantially on industry standard SQL syntax. There are however some differences from SQL syntax due to the nature and structure of the <span class="mc-variable _global/product.pxi variable">Pronto&#160;Xi</span> 4GL implementation.</p>
                                                    <p data-mc-conditions="IDE_Extract.IDE_4GL_Exclude">The clauses defined here can be used in the SELECT loop statement and in the SELECT clause of a SCREEN definition.</p>
                                                    <p class="note" data-mc-conditions="IDE_Extract.IDE_4GL_Exclude">The SELECT clause cannot use database-sql features when referencing a temporary object (that is, a memory object).</p>
                                                    <h2 class="nontoc" id="Syntax" data-magellan-target="Syntax">Syntax</h2><pre xml:space="preserve" data-mc-conditions="IDE_Extract.IDE_4GL_Full"><span class="code_highlight">select</span>
   [<span class="code_highlight"><a href="#clause_distinct">distinct</a></span>] <a href="#clause_selectlist">select-list</a>
   <span class="code_highlight"><a href="#clause_from">from</a></span> object-list
   [<span class="code_highlight"><a href="#clause_where">where</a></span> condition]
   [<span class="code_highlight"><a href="#clause_databasesql">database-sql</a></span>|<span class="code_highlight"><a href="#clause_databasesql">local-sql</a></span>]   [<span class="code_highlight"><a href="#clause_orderby">order by</a></span> field-name [<span class="code_highlight">desc</span>] [field-name [<span class="code_highlight">desc</span>] ...]]
   [<span class="code_highlight"><a href="#clause_groupby">group by</a></span> field-list]
   [<span class="code_highlight"><a href="#clause_having">having</a></span> condition]
   [<span class="code_highlight"><a href="#clause_forupdate">for update</a></span> <span class="code_highlight"><a href="#no-wait">no-wait</a></span>]

<span class="code_highlight">select</span> <a href="#clause_selectlist">select-list</a> <span class="code_highlight"><a href="#clause_from">from</a></span> object-list [<span class="code_highlight"><a href="#clause_where">where</a></span> condition]
   <span class="code_highlight"><a href="#clause_union">union</a></span> [<span class="code_highlight"><a href="#clause_union">all</a></span>]
   <span class="code_highlight">select</span> <a href="#clause_selectlist">select-list</a> <span class="code_highlight"><a href="#clause_from">from</a></span> object-list [<span class="code_highlight"><a href="#clause_where">where</a></span> condition]
   [<span class="code_highlight"><a href="#clause_union">union</a></span> [<span class="code_highlight"><a href="#clause_union">all</a></span>] ...]
   [<span class="code_highlight"><a href="#clause_orderby">order by</a></span> field-name [<span class="code_highlight">desc</span>] [field-name [<span class="code_highlight">desc</span>] ...]]
   [<span class="code_highlight"><a href="#clause_groupby">group by</a></span> field-list]
   [<span class="code_highlight"><a href="#clause_having">having</a></span> condition]

<span data-mc-conditions="IDE_Extract.IDE_4GL_Exclude"><span class="emphasis">where</span>
condition can contain a sub-query of one of the following forms:
   [<span class="code_highlight">not</span>] <span class="code_highlight">exists</span> (<span class="code_highlight">select</span> select-statement)
   expression [<span class="code_highlight">not</span>] <span class="code_highlight">in</span> (<span class="code_highlight">select</span> select-statement)
   expression comparison <span class="code_highlight">all</span> (<span class="code_highlight">select</span> select-statement)
   expression comparison <span class="code_highlight">any</span> (<span class="code_highlight">select</span> select-statement)
   expression comparison (<span class="code_highlight">select</span> select-statement)

object-list can specify an inner or outer join as follows:
   object1 <span class="code_highlight">inner join</span> object2 <span class="code_highlight">on</span> condition
   object1 <span class="code_highlight">left</span>|<span class="code_highlight">right</span>|<span class="code_highlight">full</span> [<span class="code_highlight">outer</span>] <span class="code_highlight">join</span> object2 <span class="code_highlight">on</span> condition</span></pre>
                                                    <h2 class="unnumbered_nonTOC" data-mc-conditions="IDE_Extract.IDE_4GL_Exclude" id="Clauses" data-magellan-target="Clauses"><a name="clause_distinct"></a>Clauses</h2>
                                                    <table style="width: 100%;" class="general" data-mc-conditions="IDE_Extract.IDE_4GL_Exclude">
                                                        <col style="width: 20%" />
                                                        <col />
                                                        <thead>
                                                            <tr>
                                                                <th>Clause</th>
                                                                <th>Description</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            <tr>
                                                                <td>
                                                                    <p><a name="clause_selectlist"></a>DISTINCT</p>
                                                                </td>
                                                                <td>
                                                                    <p>Duplicate rows are not returned in the result set. This is based on the values of all fields that form the <span class="emphasis">select-list</span>.</p>
                                                                    <p>This clause, if included, can affect performance if there is a large result set.</p>
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <td>
                                                                    <p>select-list</p>
                                                                </td>
                                                                <td>
                                                                    <p>The select-list is the list of fields (columns) to be included in the rows returned (the result set).</p>
                                                                    <p>A <span class="emphasis">select-list</span> can be formed by specifying individual fields from the objects in the FROM clause, calculations, or wildcard selection.</p>
                                                                    <p>Individual fields can be specified with or without the prefixed name of the object that they occur in (for example, <span class="file_path">accountcode</span> or <span class="file_path">deb-master.accountcode</span>). If a field is specified with an object prefix, the result is returned to the non-prefixed version of the field in the application (for example, selecting <span class="file_path">deb-master.accountcode</span> returns the value into <span class="field_name">accountcode</span>).</p>
                                                                    <p>Calculations can be specified in the select list. The field used to store the result of the calculation must be a field already defined in the program. Any fields referenced in the calculation must be either contained in one of the object in the FROM clause, a calculation field, or a host field (see later).</p>
                                                                    <p>If a field called <span class="field_name">calc</span> is defined in the program:</p><pre xml:space="preserve"><span class="code_highlight">select</span> accountcode,
        calc = balance * 10
</pre>
                                                                    <p>To wildcard the selection of all fields in a specific table you specify the object name followed by ".*" (for example, deb-master.*). To wildcard the selection of all fields in all objects specified in the FROM clause, a single '*' can be used, for example:</p><pre xml:space="preserve"><span class="code_highlight">select</span> * <span class="code_highlight">from</span> deb-master
</pre>
                                                                    <p class="note">Only the fields listed in the <span class="emphasis">select-list</span> (either explicitly or by a wildcard) are returned to the application. The value of fields that are not listed in the <span class="emphasis">select-list</span> are not affected by the SELECT statement, regardless of whether they occur in one of the objects in the FROM clause.</p>
                                                                    <p><a name="clause_from"></a>The value of <span class="emphasis">balance</span> in the application is not affected by the following:</p><pre xml:space="preserve"><span class="code_highlight">set</span> balance = 10
<span class="code_highlight">select</span> accountcode, shortname
   <span class="code_highlight">from</span> deb-master
   <span class="code_highlight">where</span> balance &gt; 1000
 <span class="code_highlight">detail</span>
   <span class="code_highlight">do</span> my-procedure
<span class="code_highlight">end-select</span><span class="code_comment">// balance will still be 10</span></pre>
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <td>
                                                                    <p><a name="clause_where"></a>FROM</p>
                                                                </td>
                                                                <td>
                                                                    <p>List of <span class="mc-variable _global/product.pxi variable">Pronto&#160;Xi</span> objects (tables) from which the fields (columns) are selected.</p>
                                                                    <p>The AS keyword can be specified in the FROM clause to define an alias for the table/object. The table will be known by this alias within the query, and references to the actual object name will be invalid.</p>
                                                                    <p>The syntax is:</p>
                                                                    <p class="codeblock"><span class="code_highlight">from</span> &lt;object-name&gt; [<span class="code_highlight">as</span> &lt;alias-name&gt;] ...</p>
                                                                    <div class="example">
                                                                        <p>For example:</p>
                                                                        <div class="codeblock">
                                                                            <p><span class="code_highlight">select</span> dm.accountcode, dm.balance, dt.tr-amount</p>
                                                                            <p><span class="code_highlight">from</span> deb-master as dm</p>
                                                                            <p><span class="code_highlight">inner join</span> deb-trans <span class="code_highlight">as</span> dt <span class="code_highlight">on</span> dm.accountcode = dt.accountcode</p>
                                                                            <p><span class="code_highlight">where</span> dm.balance &gt; 1000</p>
                                                                        </div>
                                                                    </div>
                                                                    <p>For consistency, the AS keyword is also valid when selecting columns. This will be considered the equivalent of using the = assignment for a calculation. Specifying "select balance as b" is equivalent to "select b = balance". The field specified after the AS must exist, and is processed as a calculation rather than an alias.</p>
                                                                    <p>For more information on this clause, see <a href="#tp_gen_notes" class="standard MCXref xref xrefstandard">Notes</a> below.</p>
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <td>
                                                                    <p>WHERE </p>
                                                                </td>
                                                                <td>
                                                                    <p>Only rows that fulfil the condition (logical expression) specified are returned.</p>
                                                                    <p>When the DATABASE-SQL clause is included, the <a href="../functions/concat.htm" class="standard MCXref xref xrefstandard">CONCAT()</a> function can be used in the WHERE clause and the following conditional test is also supported:</p><pre xml:space="preserve"><span class="code_highlight">is</span> [<span class="code_highlight">not</span>] <span class="code_highlight">null</span></pre>
                                                                    <p><a name="clause_databasesql"></a><span class="mc-variable _global/product.pxi variable">Pronto&#160;Xi</span> data does not contain NULL values, however the results for an OUTER join may return a NULL value for a column. Any NULL column data is returned to the <span class="mc-variable _global/product.pxi variable">Pronto&#160;Xi</span> application as zero for numbers (and dates) or a space for alphanumerics.</p>
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <td>
                                                                    <p>DATABASE-SQL</p>
                                                                    <p>LOCAL SQL</p>
                                                                </td>
                                                                <td>
                                                                    <p>Specifies whether the query is to be processed locally, that is, by the runtime, or by direct execution in the relational database.</p>
                                                                    <p>For more information, see <a href="#direct_sql_execution" class="standard MCXref xref xrefstandard">SELECT clause</a> below.</p>
                                                                    <p class="note">DATABASE-SQL queries increment the read counts for realtime trace control. If the query affects multiple tables, the count for each table will be incremented by one for each row retrieved.</p>
                                                                    <p class="important"><a name="clause_orderby"></a>When using the DATABASE-SQL clause for a select with an outer join, the ANSI join syntax shown above must be used and the ON clause must also be included.</p>
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <td>
                                                                    <p>ORDER BY</p>
                                                                </td>
                                                                <td>
                                                                    <p>Rows are returned in the field sequence specified in this clause.</p>
                                                                    <p><a name="clause_groupby"></a>The field values are sorted in ascending order by default, but can be reversed using the DESC option. If no ORDER BY or GROUP BY clause is included, the order of rows returned in the result set cannot be guaranteed.</p>
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <td>
                                                                    <p>GROUP BY</p>
                                                                </td>
                                                                <td>
                                                                    <p>If this clause is included, the SELECT statement is an aggregate query. One aggregate row is returned for every set (group) of rows with the same values for the fields specified in the GROUP BY clause, for example:</p><pre xml:space="preserve"><span class="code_highlight">group by</span> rep-code territory
</pre>
                                                                    <p>This returns one row for each unique rep-code and territory combination.</p>
                                                                    <p class="note" data-mc-conditions="IDE_Extract.IDE_4GL_Exclude"><a name="clause_having"></a>The <span class="emphasis">select-list</span> must only specify the fields listed in the GROUP BY clause, or the results of aggregate functions (see later).</p>
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <td>
                                                                    <p>HAVING</p>
                                                                </td>
                                                                <td>
                                                                    <p>This clause can be used to exclude groups of rows defined by the GROUP BY clause. The HAVING condition can only reference aggregate functions or the fields listed in the GROUP BY clause.</p>
                                                                    <p>Host fields, prefixed by a colon (:) can be specified in the condition.</p>
                                                                    <p>The WHERE clause can be used to restrict rows that make up the set used by the GROUP BY. The HAVING clause can be used to restrict the resultant groups. Both the WHERE and HAVING clauses can be used in the same SELECT.</p>
                                                                    <p>The following example returns the <span class="field_name">accountcode</span> value, where the total of the <span class="field_name">tr-amount</span> field for the <span class="emphasis">IN</span> records in that <span class="field_name">accountcode</span> exceeds 1000:<a name="clause_forupdate"></a></p><pre xml:space="preserve"><span class="code_highlight">select</span> accountcode,
       my-calc = <span class="code_highlight">sum</span>(tr-amount)
  <span class="code_highlight">from</span> deb-trans
  <span class="code_highlight">where</span> trans-type = "IN"
  <span class="code_highlight">group by</span> accountcode
  <span class="code_highlight">having sum</span>(tr-amount) &gt; 1000
</pre>
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <td>
                                                                    <p>FOR UPDATE or FOR-UPDATE</p>
                                                                </td>
                                                                <td>
                                                                    <p>This clause indicates that the rows extracted can be updated or deleted. This clause is only valid for a single object SELECT. All fields should be selected (with an asterisk <span class="field_value">*</span>).</p>
                                                                    <p>Each current row of the SELECT loop is locked as it is passed to the program. When the SELECT clause is used with a SCREEN declaration, records are only locked when a mode is selected that requires a lock. FOR UPDATE is assumed for a SCREEN declaration that uses SELECT * from a single FROM object.</p>
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <td>
                                                                    <p><a name="no-wait"></a>NO-WAIT</p>
                                                                </td>
                                                                <td>
                                                                    <p>This clause specifies to not wait for locked rows and to abort the SELECT
 statement if a locked row is encountered.</p>
                                                                    <p> If specified it
must immediately follow the FOR-UPDATE clause (that is, FOR-UPDATE NO-WAIT).</p>
                                                                    <p>If an ON ERROR clause is present
  then this will be invoked if a lock is encountered.</p>
                                                                    <p>The user will not be given the option to retry the lock request if a lock
  is encountered.</p>
                                                                    <p>The application cannot commit transactions during the SELECT loop. Doing so  will cause the SELECT loop to fail.</p>
                                                                    <p>A SELECT that specifies FOR-UPDATE NO-WAIT is more efficient as it does not
  need to cater for lock retries and application transaction commits during the
loop.</p>
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <td>
                                                                    <p>OFFSET and FETCH</p>
                                                                </td>
                                                                <td>
                                                                    <p>OFFSET specifies the number of rows to offset/skip at the start of the result set.</p>
                                                                    <p>FETCH specifies the maximum number of rows to return from the result set.</p>
                                                                    <p class="note">This clause must be specified immediately after the ORDER BY clause for the query. An ORDER BY clause must be specified.</p>
                                                                    <p>The syntax is:</p>
                                                                    <div class="codeblock">
                                                                        <p><span class="code_highlight">order by</span> &lt;field-list&gt; [ <span class="code_highlight">offset</span> &lt;expr&gt; [ROW[S]]]</p>
                                                                        <p> [<span class="code_highlight">fetch</span> [<span class="code_highlight">first</span>|<span class="code_highlight">next</span>] [&lt;expr&gt;] [ROW[S]] [ONLY]]</p>
                                                                    </div>
                                                                    <p>The FIRST, NEXT, ROWS, and ROWS ONLY keywords are optional and ignored if present. If &lt;expr&gt; is not specified for FETCH then 1 row is returned.</p>
                                                                    <p class="example">select * from deb-master order by accountcode offset 5 rows fetch 10 rows only</p>
                                                                    <p class="example">select * from deb-master order by accountcode fetch first :lf-rows rows only</p>
                                                                    <p class="example">select * from deb-master order by accountcode fetch first row only</p>
                                                                    <p class="note">These clauses are only valid for non-screen based SELECT statements. <a name="clause_union"></a>That is, they cannot be used in the SELECT statement for a screen.</p>
                                                                    <p class="note"><span class="mc-variable _global/product-external.Microsoft_Windows variable">Microsoft Windows</span> implementations will require <span class="mc-variable _global/product-external.Microsoft_SQL_Server variable">Microsoft SQL Server</span> 2012 or later to use these clauses.</p>
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <td>
                                                                    <p>UNION</p>
                                                                </td>
                                                                <td>
                                                                    <p>The UNION clause allows you to combine the results of multiple SELECT statements into the one result set. This can be useful to combine the results of a <span class="emphasis">live</span> file with that of an archive file (for example, sales-order and sales-order-archive).</p>
                                                                    <p>The optional ALL keyword means that duplicate rows are allowed (that is, a result row with the same values for all columns selected). Using the ALL keyword generally improves the performance of the query. It should be used if you do not care if duplicate rows are returned, or if you believe that there should not be any.</p>
                                                                    <p>The same number of columns <span class="emphasis">must</span> be selected in each SELECT statement. The data type of each corresponding column must be compatible (for example, if one is numeric, they all must be numeric in that column). The names of the columns do not need to be the same.</p>
                                                                    <p>You can only specify a single ORDER BY clause. This clause must be at the end of the query if used. The column names that you use are those of the first SELECT in the query.</p>
                                                                    <p>There is no limit to the number of SELECT statements that you can join together with UNION statements in a query, for example:</p><pre xml:space="preserve"><span class="code_highlight">select</span> * <span class="code_highlight">from</span> sales-order
  <span class="code_highlight">where</span> so-invoice-no = :lf-invoice-no
  <span class="code_highlight">union all</span>
  <span class="code_highlight">select</span> * <span class="code_highlight">from</span> sales-order-archive
    <span class="code_highlight">where</span> so-invoice-no = :lf-invoice-no
  <span class="code_highlight">order by</span> so-invoice-no
</pre>
                                                                </td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                    <h2 class="unnumbered_nonTOC" data-mc-conditions="IDE_Extract.IDE_4GL_Exclude" id="Notes" data-magellan-target="Notes"><a name="tp_gen_notes">Notes</a>
                                                    </h2>
                                                    <div data-mc-conditions="IDE_Extract.IDE_4GL_Exclude">
                                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead" id="Subqueries" data-magellan-target="Subqueries"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Sub-queries</a></span>
                                                            <div class="MCDropDownBody dropDownBody">
                                                                <p>The condition can optionally include a sub-query of one of the forms listed in the syntax section. Sub-queries are only supported, however, for queries submitted directly to the database, and cannot be used if the LOCAL&#8209;SQL clause is included.</p>
                                                                <p>The parentheses around the SELECT in the sub-query are optional but recommended to avoid confusion with the clauses of the parent SELECT.</p>
                                                                <p>To reference a field that belongs to a table that is not referenced in the sub-query, you must prefix the field to indicate where it is from.</p>
                                                                <p>Only a single column can be selected or returned. The following example sub-query calculates the average value of the balance field in all deb-master records and that average value is then used as a lower threshold value for the main select:</p><pre xml:space="preserve"><span class="code_highlight">where</span> balance &gt; (<span class="code_highlight">select avg</span>(balance) <span class="code_highlight">from</span> deb-master)</pre>
                                                                <p>The following sub-query returns those records in the payroll-position-details table for which the number of records in the payroll-position-employee tables has a count less than or equal to the value of the payroll-position-details.ppd-no-of-available-positions field, that is, it shows records for positions that have not been completely filled:</p><pre xml:space="preserve"><span class="code_highlight">select</span> *
<span class="code_highlight">from</span> payroll-position-details
<span class="code_highlight">when</span> payroll-position-details.pay-position-hours-per-week &gt;
   (<span class="code_highlight">select count</span>() <span class="code_highlight">from</span> payroll-position-employees
      <span class="code_highlight">when</span> payroll-position-details.pay-position-number =
           payroll-position-employees.pay-position-number )</pre>
                                                                <p>The following sub-query returns a count of the number of records in the name-and-address-master that are supplier related and also have ‘~T’ record in the cre-extra-notes table:</p><pre xml:space="preserve"><span class="code_highlight">select</span> lf-work-estimate = <span class="code_highlight">count</span>(*)
<span class="code_highlight">from</span> name-and-address-master
   <span class="code_highlight">where</span> na-type = "C"
   <span class="code_highlight">and</span> na-tax-group = <span class="code_highlight">spaces</span>
      <span class="code_highlight">and exists</span> (<span class="code_highlight">select</span> cre-extra-notes.cen-text <span class="code_highlight">from</span> cre-extra-notes
         <span class="code_highlight">where</span> cre-extra-notes.cre-accountcode = name-and-address-master.accountcode
         <span class="code_highlight">and</span> cre-extra-notes.cen-type = "~T"
         <span class="code_highlight">and</span> cre-extra-notes.cen-seq-no = 1
         <span class="code_highlight">and</span> cre-extra-notes.cen-text &gt; <span class="code_highlight">spaces</span>)
      <span class="code_highlight">and exists</span> (<span class="code_highlight">select</span> 1 <span class="code_highlight">from</span> cre-master
         <span class="code_highlight">where</span> name-and-address-master.accountcode = cre-master.cre-accountcode)</pre>
                                                            </div>
                                                        </div>
                                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead" id="DirectSQLexecutionruntimeversion71orabove" data-magellan-target="DirectSQLexecutionruntimeversion71orabove"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Direct SQL execution (runtime version 7.1 or above)</a></span>
                                                            <div class="MCDropDownBody dropDownBody">
                                                                <ul>
                                                                    <li>
                                                                        <p>Where possible, the full SQL code for the SELECT statement is issued directly to the database. The runtime determines if this is possible and, if not, the SELECT statement is processed internally by the runtime in the traditional manner.</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>Issuing the full SQL code for the query to the database directly can result in major improvements to performance for SELECT statements that specify multiple objects, have a large degree of filtering specified in the WHERE clause, or specify aggregate functions. This can significantly reduce the amount of data that needs to be retrieved by the runtime in order to process the query itself and allows the database to perform all sorting, filtering and aggregating, and so on, internally.</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>The direct SQL execution feature applies only to queries that reference objects of type INDEXED or DB&#8209;SEQUENTIAL, that is database tables.</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>The DATABASE-SQL or LOCAL-SQL clauses can be included directly after the query to force where the query is processed. If neither clause is included, the runtime selects the most suitable method of processing unless you specify the default method to use by setting the <span class="envar">PRODATABASESQL</span> environment variable to one of the following values:</p>
                                                                        <ul>
                                                                            <li>
                                                                                <p><span class="field_value">S</span> - use database SQL by default for screen based SELECT operations</p>
                                                                            </li>
                                                                            <li>
                                                                                <p><span class="field_value">W</span> - same as setting <span class="field_value">S</span>. In addition, the <span class="file_path">procmp</span> compiler issues a warning for any SELECT statement that includes the DATABASE-SQL clause but is not suitable for direct execution in the relational database. This warning is not issued if the LOCAL-SQL clause has been specified in the SELECT statement.</p>
                                                                            </li>
                                                                            <li>
                                                                                <p><span class="field_value">Y</span> - use database SQL by default only for non-screen based SELECT operations</p>
                                                                            </li>
                                                                            <li>
                                                                                <p><span class="field_value">N</span> - do not use database SQL unless the DATABASE-SQL clause is specified in the code.</p>
                                                                            </li>
                                                                            <p class="note">The <span class="envar">PRODATABASESQL</span> environment variable has no effect on operations tables (.op7 files) generated using the compiler included in runtime versions before 7.1. This environment variable setting also affects screens with a PRIMARY object declaration as these are converted to SELECT statements by the compiler.</p>
                                                                        </ul>
                                                                    </li>
                                                                    <li>
                                                                        <p>If a SELECT statement with the DATABASE-SQL clause includes functions that are not directly supported by the database, the traditional SELECT processing is used.</p>
                                                                        <p>The supported functions are: ABS, AVG, CONCAT, COUNT, DAY, LOWERCASE, LTRIM, MAX, MIN, MONTH, RTRIM, SQL&#8209;SUBSTRING, STRLEN, SUM, UPPERCASE, YEAR, IF-THEN-ELSE.</p>
                                                                        <p class="restriction">Programs that contain the IF-THEN-ELSE function in a SELECT statement that does not specify LOCAL-SQL, and which were compiled with 7.1v2.0 or higher, may fail if run on previous runtime releases.</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>If the FOR-UPDATE clause is included, the direct SQL code is only used if all fields for the object have been selected using *. The LOCK&#8209;METHOD must also be set to NO&#8209;WAIT, as there is no ability to retry a locked record when the database is in full control of the SELECT processing. If the LOCK&#8209;METHOD is not set to NO&#8209;WAIT, the processing method is used for the SELECT statement.</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>All expression processing is passed to the database and not performed by the runtime. This means that it is possible to have database specific differences in how some expressions are evaluated. In particular you should avoid fractional arithmetic (i.e. division) in the WHERE cause as differences in precision and rounding may cause inconsistent comparison results.</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>The databases do not have the concept of a zero date or time, so any comparisons of date/time fields to a literal value of zero should be avoided and the following special names used instead:</p>
                                                                        <ul>
                                                                            <li>
                                                                                <p>ZERO_DATE, ZERO_TIME, ZERO_DATE_TIME</p>
                                                                            </li>
                                                                        </ul>
                                                                    </li>
                                                                    <li>
                                                                        <p>A SELECT statement directly issued to the database cannot be restarted part way though. If the program performs a CLOSE ALL this will cause all direct SELECT statements to be closed. The SELECT loop will fail at the next iteration of the loop after a CLOSE ALL (with error code 10013).</p>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div data-mc-conditions="IDE_Extract.IDE_4GL_Exclude">
                                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead" id="Aggregatefunctions" data-magellan-target="Aggregatefunctions"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Aggregate functions</a></span>
                                                            <div class="MCDropDownBody dropDownBody">
                                                                <p>When a GROUP BY is used, the <span class="emphasis">select-list</span> and the HAVING condition can reference aggregate functions. These are functions that return the accumulated result for all rows in the current GROUP BY set.</p>
                                                                <p>If the aggregate function for a datagrid column fails due to locks, aggregates will be calculated manually.</p>
                                                                <p class="note">If aggregate functions are specified in the <span class="emphasis">select-list</span> and no GROUP BY clause is included, the entire set of valid rows <span class="emphasis">are</span> considered as a single group. In this case the SELECT returns one aggregate row for the entire query.</p>
                                                                <ul class="nest_list_bold">
                                                                    <li>
                                                                        <p>AVG(<span class="emphasis">expression</span>)</p>
                                                                        <p>Returns the average value of the results of <span class="emphasis">expression</span> for the rows in the group. The expression specified must be numeric.</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>SUM(<span class="emphasis">expression</span>)</p>
                                                                        <p>Returns the sum (total) value of the results of <span class="emphasis">expression</span> for the rows in the group. The expression specified must be numeric.</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>MIN(<span class="emphasis">expression</span>)</p>
                                                                        <p>Returns the minimum (lowest) value of the results of <span class="emphasis">expression</span> in the rows that make up the current group. The expression can be any type (for example, alphanumeric, numeric, date, and so on).</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>MAX(<span class="emphasis">expression</span>)</p>
                                                                        <p>Returns the maximum (highest) value of the results of <span class="emphasis">expression</span> in the rows that make up the current group. The expression can be any type (for example, alphanumeric, numeric, date, and so on).</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>COUNT()</p>
                                                                        <p>Returns the number of rows in the current group.</p>
                                                                        <div class="note">
                                                                            <p>Some databases will wait on any relevant locked records when executing a count. This can result in the SELECT statement crashing with the error code ELOCKED.</p>
                                                                            <p>If there is a possibility that records are locked, the ELOCKED error should be handled by falling back to a count using SUM(). For example:</p>
                                                                            <div class="codeblock">
                                                                                <p>select lf-count = count()</p>
                                                                                <p>from deb-master</p>
                                                                                <p>on error ELOCKED</p>
                                                                                <p>select lf-count = sum(1)</p>
                                                                                <p>from deb-master</p>
                                                                                <p>endselect</p>
                                                                                <p>endon</p>
                                                                                <p>endselect</p>
                                                                            </div>
                                                                            <p>The SUM() function can be used as a <span class="no_glossary">fallback</span> in this situation because it is not affected by record locks.</p>
                                                                            <p>The reason to use COUNT() instead of SUM(1) is for efficiency. With COUNT(), the database doesn’t necessarily have to read any rows in the table. Depending on the WHERE condition, it can use internal statistics or look at the index.</p>
                                                                        </div>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        </div>
                                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead" id="LIKEcomparisons" data-magellan-target="LIKEcomparisons"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">LIKE comparisons</a></span>
                                                            <div class="MCDropDownBody dropDownBody">
                                                                <p class="note"><a name="select_clause_like_comparisons">The following behaviour is for runtime release 7.7v0.5 and below.</a>
                                                                </p>
                                                                <p>When a LIKE comparison is used in a WHERE clause and the comparison is required with the pattern stored in a host field, that field <span class="emphasis">must</span> be defined as TYPE STRING so that trailing spaces are ignored when the field value is used as a pattern.</p>
                                                                <p>If the field specifying the pattern is declared as LIKE a dictionary field, you can remove trailing spaces using the RTRIM()&#160;function as shown in the following example:</p><pre xml:space="preserve"><span class="code_highlight">field</span> ws-like-stock-code <span class="code_highlight">like</span> stock-code
<span class="code_highlight">select</span> * <span class="code_highlight">from</span> stock-master
<span class="code_highlight">where</span> stock-code <span class="code_highlight">like rtrim</span>(ws-like-stock-code)</pre>
                                                                <p>For more information, see <a href="../../_local/content/about_other_about_comparison_operators.htm" class="standard MCXref xref xrefstandard">About comparison operators</a>.</p>
                                                            </div>
                                                        </div>
                                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead" id="MultipleobjectsintheFROMclause" data-magellan-target="MultipleobjectsintheFROMclause"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Multiple objects in the FROM clause</a></span>
                                                            <div class="MCDropDownBody dropDownBody">
                                                                <p>The result of a multiple object (table) query is a set of rows that combine (join) all of the valid rows in all of the objects selected. If no criteria are given defining the relationships between the tables (that is, how to join them), the result is the Cartesian product of all the rows in all of the tables listed. This is seldom what is required, and should be avoided, as it results in a potentially significant amount of rows being returned, most of which are not required.</p>
                                                                <p>The relationship between the tables can be defined in two ways. In circumstances where the join is based on a field that has the same name in each of the tables to be joined, an implied <span class="emphasis">auto join</span> can be used (see below).</p>
                                                                <p>If an auto join is not performed, individual field relationships must be specified explicitly in the WHERE clause, for example:</p><pre xml:space="preserve"><span class="code_highlight">select</span> * <span class="code_highlight">from</span> cre-master, stock-movements
   <span class="code_highlight">where</span> cre-accountcode = stk-accountcode
</pre>
                                                            </div>
                                                        </div>
                                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead" id="Autojoins" data-magellan-target="Autojoins"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Auto joins</a></span>
                                                            <div class="MCDropDownBody dropDownBody">
                                                                <p>When multiple objects are specified in the FROM clause, and the same field name occurs in more than one of the objects, by default an <span class="emphasis">auto-join</span> is performed on this field if it occurs in the <span class="emphasis">select-list</span>.</p>
                                                                <p>An auto join is not performed if the field is not selected in the <span class="emphasis">select-list</span> (either explicitly or by a non-prefixed wildcard).</p>
                                                                <p>An auto join has the same effect as if there was an explicit join specified on this field in the WHERE clause. For example, if the field <span class="file_path">accountcode</span> is selected and both <span class="file_path">deb-master</span> and <span class="file_path">deb-trans</span> containing this field are specified in the FROM clause, the following is implied:</p><pre xml:space="preserve"><span class="code_highlight">where</span> deb-master.accountcode = deb-trans.accountcode
</pre>
                                                                <p>If this relationship is not required, you must ensure that the fields are selected (or referenced) individually with an object prefix (for example, <span class="file_path">deb-master.accountcode</span>). It might also be necessary to assign them to a calculation if the same field is required in the result from multiple tables without a join, for example:</p><pre xml:space="preserve"><span class="code_highlight">select</span> acc1 = deb-master.accountcode, acc1 = deb-trans.accountcode
</pre>
                                                                <p>An auto join is performed for the following:</p><pre xml:space="preserve"><span class="code_highlight">select</span> accountcode, shortname, tr-amount
   <span class="code_highlight">from</span> deb-master, deb-trans
</pre>
                                                                <p>An auto join is <span class="emphasis">not</span> performed for the following since no selected field exists in both objects:</p><pre xml:space="preserve"><span class="code_highlight">select</span> shortname, tr-amount
  <span class="code_highlight">from</span> deb-master, deb-trans
</pre>
                                                            </div>
                                                        </div>
                                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead" id="Joiningobjects" data-magellan-target="Joiningobjects"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Joining objects</a></span>
                                                            <div class="MCDropDownBody dropDownBody">
                                                                <p>For runtime release 7.1 and above, the FROM clause supports the specification of ANSI INNER and OUTER join types, including LEFT, RIGHT and FULL outer joins. The required syntax is:</p><pre xml:space="preserve">object1 <span class="code_highlight">inner join</span> object2 <span class="code_highlight">on</span> condition
object1 <span class="code_highlight">left</span>|<span class="code_highlight">right</span>|<span class="code_highlight">full</span> [<span class="code_highlight">outer</span>] <span class="code_highlight">join</span> object2 <span class="code_highlight">on</span> condition
</pre>
                                                                <p>The supported join types are:</p>
                                                                <ul class="nest_list_bold">
                                                                    <li>
                                                                        <p>INNER JOIN</p>
                                                                        <p> A traditional join where only rows that satisfy the join condition are returned.</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>LEFT OUTER JOIN</p>
                                                                        <p>All valid rows from the left objects, plus qualifying rows from the right objects. When there is no qualifying row from the right object, then NULL values are returned for each selected column in the right object.</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>RIGHT OUTER JOIN</p>
                                                                        <p>Same as LEFT OUTER JOIN except with the roles of the two objects reversed.</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>FULL OUTER JOIN</p>
                                                                        <p>The union of all rows from an INNER join of the two objects, and of all rows of each object that has no match in the other object (returning NULL values in the selected columns of the other object).</p>
                                                                    </li>
                                                                </ul>
                                                                <p>The joins can be nested in parenthesis to group joins together. Any object can be replaced by another set of joins in parenthesis as in the following example:</p><pre xml:space="preserve">obj1 <span class="code_highlight">left outer join</span> (obj2 <span class="code_highlight">inner join</span> obj3 <span class="code_highlight">on</span> cond) <span class="code_highlight">on</span> cond 
</pre>
                                                                <p>The ON clause must be specified for all ANSI joins. This clause is intended to specify all join and filter conditions specific to the table being joined. The ON clause can include any expression that would be valid in the WHERE clause. You can specify join and filter conditions in the WHERE clause in addition to those in the ON clause. If an OUTER join is used, however, any tests in the WHERE clause need to take into consideration NULL values returned. It is therefore highly advisable to place all join and filter conditions for an OUTER join in the ON clause of the join.</p>
                                                                <p>The OUTER join method supported before runtime release 7.1, where the join condition is specified in the WHERE clause, is still supported. This method cannot be used, however, when the DATABASE-SQL clause is included. Any OUTER join that does not specify an ON clause is processed as LOCAL-SQL only.</p>
                                                                <p>For consistency with the previously supported syntax, an OUTER join with an ON clause that does not specify LEFT, RIGHT or FULL will default to LEFT. The following join statements are therefore equivalent:</p><pre xml:space="preserve">object1 <span class="code_highlight">outer</span> object2 <span class="code_highlight">on</span> condition
object1 <span class="code_highlight">left outer join</span> object2 <span class="code_highlight">on</span> condition
</pre>
                                                                <p class="note">The condition in the ON clause only affects how the tables are joined and not the filter condition for other tables as shown in the following examples:</p><pre xml:space="preserve"><span class="code_highlight">select</span> * <span class="code_highlight">from</span> sales-order 
   <span class="code_highlight">left join</span> sales-order-line 
   <span class="code_highlight">on</span> sales-order.so-order-no = sales-order-line.so-order-no
   <span class="code_highlight">where</span> sales-order.so-order-no = 12345

<span class="code_highlight">select</span> * <span class="code_highlight">from</span> sales-order 
   <span class="code_highlight">left join</span> sales-order-line
   <span class="code_highlight">on</span> sales-order.so-order-no = sales-order-line.so-order-no 
        <span class="code_highlight">and</span> sales-order.so-order-no = 12345
</pre>
                                                                <p>The first SELECT statement above returns the specific sales order 12345 and all its lines. The second SELECT statement returns all sales orders but only the lines of sales order 12345.</p>
                                                            </div>
                                                        </div>
                                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead" id="Orderofobjectsinaselect" data-magellan-target="Orderofobjectsinaselect"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Order of objects in a select</a></span>
                                                            <div class="MCDropDownBody dropDownBody">
                                                                <p>When referencing multiple objects in a select, you should order the objects based on how you want to join the tables, and take into consideration which tables can be used to filter to the rows to be retrieved. As a general rule, the leading tables should be the ones that filter out the most rows, thereby reducing the number of rows needed to be retrieved from subsequent tables that are joined to them.</p>
                                                            </div>
                                                        </div>
                                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead" id="Forcingtheuseofanindex" data-magellan-target="Forcingtheuseofanindex"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Forcing the use of an index</a></span>
                                                            <div class="MCDropDownBody dropDownBody">
                                                                <p>The preferred index to use when processing an object can be specified by including the ON INDEX clause directly after the name of the object in the FROM list. If this is used, the objects are processed in the order they are listed in the FROM clause. We do not recommend using this technique, however, as long term support for this clause is not guaranteed.</p>
                                                                <p class="restriction">The ON INDEX clause cannot be used in conjunction with the DATABASE-SQL clause.</p>
                                                            </div>
                                                        </div>
                                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead" id="Hostfields" data-magellan-target="Hostfields"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Host fields</a></span>
                                                            <div class="MCDropDownBody dropDownBody">
                                                                <p>Fields that are not contained in the objects specified in the FROM clause can be referenced in the enquiry. These fields are called host fields. Host fields can only be selected (that is, in the <span class="emphasis">select-list</span>) if they store the result of a calculation.</p>
                                                                <p>Host fields that are not calculations are considered static and should not change values during the enquiry, as unpredictable results can occur. A host field that does not store the result of a calculation should be prefixed with a colon (<span class="field_value">:</span>) to ensure that it cannot be confused with other fields in the FROM objects.</p>
                                                                <p class="example">If <span class="field_value">lf-accountcode</span> contained the required <span class="field_value">accountcode</span> value the following can be used to select all records with this value:</p>
                                                                <div class="codeblock">
                                                                    <p xml:space="preserve"><span class="code_highlight">select</span> accountcode, tr-amount <span class="code_highlight">from</span> deb-trans <span class="code_highlight">where</span> accountcode = :lf-accountcode </p>
                                                                </div>
                                                                <p>It is possible to reference fields contained in the FROM objects as host fields prefixed with a colon (for example, :trans-type). This refers to the current value of <span class="emphasis">trans-type</span> in the application program, and not to the value of that field/column in the current row being accessed in the table. This should only ever be done if there is no chance that the SELECT returns a row that contains a different value for this field.</p>
                                                            </div>
                                                        </div>
                                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead" id="AnalysingtheprocessingofaSELECT" data-magellan-target="AnalysingtheprocessingofaSELECT"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Analysing the processing of a SELECT</a></span>
                                                            <div class="MCDropDownBody dropDownBody">
                                                                <p>The <span class="emphasis">;is</span> option of the Command Line debugger can be used at runtime to analyse the way in which the SELECT statements are being processed. An information window is displayed for each SELECT statement processed (including any screen with a PRIMARY). This identifies the object extraction order, indexes used, joins, ranges, sorting and so on.</p>
                                                            </div>
                                                        </div>
                                                        <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead" id="Maindifferencesbetweenthe4GLandSQLSELECTsyntax" data-magellan-target="Maindifferencesbetweenthe4GLandSQLSELECTsyntax"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Main differences between the 4GL and SQL SELECT syntax</a></span>
                                                            <div class="MCDropDownBody dropDownBody">
                                                                <ul>
                                                                    <li>
                                                                        <p>Auto joins do not occur in SQL. This is a Pronto RAD 4GL concept.</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>The assignment of calculations is specified differently.</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>Commas are used only for readability and are optional.</p>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="MCRelationshipsProxy_related-topics_0">
                                                    <p class="referenceHeading_reference_0">REFERENCE</p>
                                                    <p class="referenceItem_reference_0"><a href="../declarations/api_declaration.htm">API declaration</a>
                                                    </p>
                                                    <p class="referenceItem_reference_0"><a href="../statements/confirm_statement.htm">CONFIRM statement</a>
                                                    </p>
                                                    <p class="referenceItem_reference_0"><a href="../functions/escape.htm">ESCAPE() function</a>
                                                    </p>
                                                    <p class="referenceItem_reference_0"><a href="../declarations/menu_declaration.htm">MENU declaration</a>
                                                    </p>
                                                    <p class="referenceItem_reference_0"><a href="../declarations/mode_declaration.htm">MODE declaration</a>
                                                    </p>
                                                    <p class="referenceItem_reference_0"><a href="../statements/option_statement.htm">OPTION statement</a>
                                                    </p>
                                                    <p class="referenceItem_reference_0"><a href="../statements/pause_statement.htm">PAUSE statement</a>
                                                    </p>
                                                    <p class="referenceItem_reference_0"><a href="../declarations/procedure_declaration.htm">PROCEDURE declaration</a>
                                                    </p>
                                                    <p class="referenceItem_reference_0"><a href="../statements/re_select_statement.htm">RE-SELECT statement</a>
                                                    </p>
                                                    <p class="referenceItem_reference_0"><a href="../declarations/screen_declaration.htm">SCREEN declaration</a>
                                                    </p>
                                                </div>
                                            </div>
                                            <div class="right-content column">
                                                <ul data-magellan="" data-animation-duration="250" data-active-class="selected" data-scroll-container=".body-container" data-scroll-container-on="only screen and (min-width: 1001px)" class="on-this-page _Skins__global_sidenav_side_menu mc-component">
                                                    <li><a href="#SELECTclause">SELECT clause</a>
                                                    </li>
                                                    <ul>
                                                        <li><a href="#Syntax">Syntax</a>
                                                        </li>
                                                        <li><a href="#Clauses">Clauses</a>
                                                        </li>
                                                        <li><a href="#Notes">Notes</a>
                                                        </li>
                                                        <li><a href="#Subqueries">Sub-queries</a>
                                                        </li>
                                                        <li><a href="#DirectSQLexecutionruntimeversion71orabove">Direct SQL execution (runtime version 7.1 or above)</a>
                                                        </li>
                                                        <li><a href="#Aggregatefunctions">Aggregate functions</a>
                                                        </li>
                                                        <li><a href="#LIKEcomparisons">LIKE comparisons</a>
                                                        </li>
                                                        <li><a href="#MultipleobjectsintheFROMclause">Multiple objects in the FROM clause</a>
                                                        </li>
                                                        <li><a href="#Autojoins">Auto joins</a>
                                                        </li>
                                                        <li><a href="#Joiningobjects">Joining objects</a>
                                                        </li>
                                                        <li><a href="#Orderofobjectsinaselect">Order of objects in a select</a>
                                                        </li>
                                                        <li><a href="#Forcingtheuseofanindex">Forcing the use of an index</a>
                                                        </li>
                                                        <li><a href="#Hostfields">Host fields</a>
                                                        </li>
                                                        <li><a href="#AnalysingtheprocessingofaSELECT">Analysing the processing of a SELECT</a>
                                                        </li>
                                                        <li><a href="#Maindifferencesbetweenthe4GLandSQLSELECTsyntax">Main differences between the 4GL and SQL SELECT syntax</a>
                                                        </li>
                                                    </ul>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                    <!--<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js">
		</script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.15.0/popper.min.js">
		</script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/js/bootstrap.min.js">
		</script>-->
                                    <script src="../../_global/resources/masterpage/sidenav/scripts/jquery.tablesorter.js">
                                    </script>
                                    <script src="../../_global/resources/masterpage/sidenav/scripts/jquery.stickytableheaders.js">
                                    </script>
                                    <script>/* <![CDATA[ */
			$(document).ready(function()
			{
			$("table").tablesorter();
			$("table").stickyTableHeaders();
			
			}
			);
		/* ]]> */</script>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>