<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-au" xml:lang="en-au" class="_Skins__global_sidenav_sidenav" data-mc-search-type="Stem" data-mc-help-system-file-name="index.xml" data-mc-path-to-help-system="../../../" data-mc-output-analytics-server="https://prontosoftwareptyltd.api.madcapcentral.com/" data-mc-output-analytics-topic-id="1xBCeJNnhjBdfvY8LHA1MewwzI3Vn4TuHRN21QTXxuUDHZLqJix68slCgwMKq0CRn4VkNP+1F3ZPawxfTvnQfOxm5UiuuomtNDOm1OraaZHU5COqoYblnAQjDqZwVy+Pbt3ibU0DKE71TEG8t4bivIYMZplR3F48VGMGjVxCb9utEtiJAqcqVxYHyfWbnnTlHWAigtuTcoo=" data-mc-has-content-body="True" data-mc-toc-path="[%=System.LinkedTitle%]|[%=System.LinkedTitle%]" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon-16x16.png" /><title>Pronto&#160;Xi Command line debugger</title>
        <meta http-equiv="Cache-control" content="no-cache" />
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/Stylesheets/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../_global/resources/css/sidenav/sdk-special-overrides.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.topic-ratings-button
{
	-pie-background: transparent url('../../../Skins/Default/Stylesheets/Images/star-full.png') no-repeat center center;
}

.button.remove-highlight-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.expand-all-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.print-expanded-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.email-tct-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.needs-pie
{
	behavior: url('../../../Resources/Scripts/PIE.htc');
}

</style>
        <link rel="apple-touch-icon" sizes="180x180" href="../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../_global/resources/masterpage/sidenav/scripts/responsive-tables.js">
        </script>
        <script type="text/javascript" src="../../../Skins/Default/Scripts/_global/sidenav/sidenav-toolbar.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-device-width: 1000px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../_home/sidenav/sidenav-home-sdk.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search..." />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="Filter your results by subject area." role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">Filter your results by subject area.</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <div class="row collapse">
                                        <div class="top-bar">
                                            <div class="buttons popup-container clearfix topicToolbarProxy _Skins__global_sidenav_sidenav_toolbar mc-component nocontent" style="mc-topic-toolbar-items: ;">
                                                <div class="button-group-container-left">
                                                    <div class="button-group star-buttons loading feedback-topic-required">
                                                        <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                            <div role="img" class="button-icon-wrapper" aria-label="Click a star to rate this topic" data-state1-alt="Click a star to rate this topic" data-state2-alt="Click a star to rate this topic">
                                                                <div class="button-icon"> </div>
                                                            </div>
                                                        </div>
                                                        <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                            <div role="img" class="button-icon-wrapper" aria-label="Click a star to rate this topic" data-state1-alt="Click a star to rate this topic" data-state2-alt="Click a star to rate this topic">
                                                                <div class="button-icon"> </div>
                                                            </div>
                                                        </div>
                                                        <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                            <div role="img" class="button-icon-wrapper" aria-label="Click a star to rate this topic" data-state1-alt="Click a star to rate this topic" data-state2-alt="Click a star to rate this topic">
                                                                <div class="button-icon"> </div>
                                                            </div>
                                                        </div>
                                                        <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                            <div role="img" class="button-icon-wrapper" aria-label="Click a star to rate this topic" data-state1-alt="Click a star to rate this topic" data-state2-alt="Click a star to rate this topic">
                                                                <div class="button-icon"> </div>
                                                            </div>
                                                        </div>
                                                        <div class="button star-button topic-ratings-empty-button" data-state1-class="topic-ratings-empty-button" data-state2-class="topic-ratings-button" title="Click a star to rate this topic" data-state1-title="Click a star to rate this topic" data-state2-title="Click a star to rate this topic">
                                                            <div role="img" class="button-icon-wrapper" aria-label="Click a star to rate this topic" data-state1-alt="Click a star to rate this topic" data-state2-alt="Click a star to rate this topic">
                                                                <div class="button-icon"> </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <button class="button needs-pie remove-highlight-button" title="Remove highlights">
                                                        <div>
                                                            <div role="img" class="button-icon-wrapper" aria-label="Remove highlights">
                                                                <div class="button-icon"> </div>
                                                            </div>
                                                        </div>
                                                    </button>
                                                    <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                        <div>
                                                            <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                                <div class="button-icon"> </div>
                                                            </div>
                                                        </div>
                                                    </button>
                                                    <button class="button needs-pie print-expanded-button" onclick="MadCap.TextEffects.TextEffectControl.ExpandAll(&quot;open&quot;); setTimeout(function(){ window.print(); }, 1500);" title="Print this topic">
                                                        <div>
                                                            <div role="img" class="button-icon-wrapper">
                                                                <div class="button-icon"> </div>
                                                            </div>
                                                        </div>
                                                    </button>
                                                    <button class="button needs-pie email-tct-button" onclick="document.location.href=&quot;mailto:pronto.edu@pronto.net?subject=Help feedback for &quot;+document.title+&quot;&amp;body=Topic: &quot;+ location.href + &quot;%0A%0AComments:%0A%0A&quot;;" title="Email us with feedback about this topic">
                                                        <div>
                                                            <div role="img" class="button-icon-wrapper">
                                                                <div class="button-icon"> </div>
                                                            </div>
                                                        </div>
                                                    </button>
                                                </div>
                                            </div>
                                            <div id="breadcrumbs">
                                                <div class="nocontent">
                                                    <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="10" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                                    </div>
                                                </div>
                                            </div>
                                            <script src="../../_global/resources/masterpage/sidenav/scripts/back-to-top.js">
                                            </script><a name="top"></a><a class="back-to-top-button" href="#top"></a>
                                        </div>
                                        <script src="../../_global/resources/masterpage/sidenav/scripts/responsive-tables.js">
                                        </script>
                                        <div class="content-box">
                                            <div class="left-content column">
                                                <div role="main" id="mc-main-content">
                                                    <h1><span class="mc-variable _global/product.pxi variable">Pronto&#160;Xi</span> command line debugger</h1><a name="aanchor175"></a>
                                                    <MadCap:concept term="4GL Programming" data-mc-conditions="_global/target-type.online" />
                                                    <p class="note">There is also a <span class="mc-variable _global/product.pxi variable">Pronto&#160;Xi</span> <span class="mc-variable _global/product.pt-debug variable">Visual Debugger</span> that you can use to debug <span class="mc-variable _global/product.pxi variable">Pronto&#160;Xi</span> 4GL programs. The <span class="mc-variable _global/product.pt-debug variable">Visual Debugger</span> provides an easy to use, unified view of fields, watch fields, objects, breakpoints, screens, menus, procedures, libraries, and tools. For more information, see the <span class="module"><span class="mc-variable _global/product.pt-debug variable">Visual Debugger</span></span> Help.</p>
                                                    <p>The <span class="mc-variable _global/product.pxi variable">Pronto&#160;Xi</span> Command Line debugger provides line-oriented debugging of operations tables (<span class="file_path">*.op?</span> files) using single and procedural step disassembly.</p>
                                                    <p>To use the Command Line debugger, a 4GL program (<span class="file_path">*.spl</span> file) must be compiled using the <span class="field_value">-d</span> option of the compiler (<span class="file_path">procmp</span>).</p>
                                                    <p>All commands are supported in the debugger line of the <span class="keybd">F9</span> (Session Information) window.</p>
                                                    <p>When commencing a program that has been compiled with debug, the <span class="keybd">F2</span> (Help) screen is displayed first, outlining the following commands:</p>
                                                    <table style="width: 100%;" class="mode">
                                                        <caption>Debugger Commands</caption>
                                                        <col />
                                                        <col />
                                                        <thead>
                                                            <tr>
                                                                <th>Command</th>
                                                                <th>Description</th>
                                                            </tr>
                                                        </thead>
                                                        <tr>
                                                            <td>
                                                                <p>.</p>
                                                            </td>
                                                            <td>
                                                                <p>Redisplay current statement.</p>
                                                                <p>Redisplay the current statement that is executed next.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;</p>
                                                            </td>
                                                            <td>
                                                                <p>Perform last command again.</p>
                                                                <p>Any of the above <span class="field_value">;</span> commands are repeated.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;b</p>
                                                            </td>
                                                            <td>
                                                                <p>Set a breakpoint at statement.</p>
                                                                <p>Set a breakpoint at the currently displayed statement. To set a breakpoint at other than the current statement, optionally key in the name of the procedure where the statement is located. Use the Up/Down arrow keys until the required statement is displayed, then mark the line with a breakpoint.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;bt</p>
                                                            </td>
                                                            <td>
                                                                <p>Set temporary breakpoint.</p>
                                                                <p>As per the <span class="emphasis">;b</span> command. Once a temporary breakpoint is reached by the Command Line debugger it is removed from the breakpoint table.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;c</p>
                                                            </td>
                                                            <td>
                                                                <p>Clear breakpoint at statement.</p>
                                                                <p>The correct statement must first be displayed before the breakpoint can be deleted.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;ca</p>
                                                            </td>
                                                            <td>
                                                                <p>Clear all breakpoints set.</p>
                                                                <p>The command can be issued at any point in a program.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;cs</p>
                                                            </td>
                                                            <td>
                                                                <p>Clear all object and screen counts.</p>
                                                                <p>Reset all object and screen counts back to zero. This can be done at any point in a program.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;e</p>
                                                            </td>
                                                            <td>
                                                                <p>Show the escape flag value.</p>
                                                                <p>The escape value is either TRUE or FALSE.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;g</p>
                                                            </td>
                                                            <td>
                                                                <p>Go - start/continue execution.</p>
                                                                <p>Begin or continue normal execution of the program until either a breakpoint is reached, a watch is tripped or termination of the program.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;ie</p>
                                                            </td>
                                                            <td>
                                                                <p>Toggle Informix SQL explain plan logging.</p>
                                                                <p>Informix will output explain plans for all queries executed (including those for GET/POSITION/EXTRACT). Output will be written to "$TMPDIR/explain_&lt;user&gt;.out".</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;is</p>
                                                            </td>
                                                            <td>
                                                                <p>Toggle SELECT information window on/off.</p>
                                                                <p>When set to on, the SELECT information window is displayed each time the runtime processes a new SELECT statement in the application. The window shows the extraction order, indexes, sorting and joins etc. used to process the SELECT operation.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;la &lt;prefix&gt;</p>
                                                            </td>
                                                            <td>
                                                                <p>List object access statistics.</p>
                                                                <p>This command displays a full screen listing of all the objects used by the program and the current number of reads/inserts/updates and deletes performed on those objects. Optionally a prefix can be supplied to list only those objects beginning with that prefix.</p>
                                                                <p>These statistics can be reset to zero at any point using the <span class="emphasis">;cs</span> command.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;lb</p>
                                                            </td>
                                                            <td>
                                                                <p>List all breakpoints set.</p>
                                                                <p>This command displays a full screen listing of all breakpoints currently active in the program. Each line in the listing takes the following form:</p>
                                                                <p><span class="emphasis">procedure</span>+<span class="emphasis">number</span>; <span class="emphasis">disassembled-line</span> $</p>
                                                                <ul class="nest_list_bold">
                                                                    <li>
                                                                        <p>procedure</p>
                                                                        <p>The procedure associated with the breakpoint.</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>number</p>
                                                                        <p>The offset line number from the start of the procedure.</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>disassembled-line</p>
                                                                        <p>The disassembled line where the breakpoint is set.</p>
                                                                    </li>
                                                                </ul>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;le</p>
                                                            </td>
                                                            <td>
                                                                <p>Generate a database explain plan for the most recent database-SQL query performed.</p>
                                                                <p>The explain plan output will be displayed in a PROED window. The content of the explain plan output is database-dependent. Users should refer to the explain plan help for the database that they are using when interpreting this output.</p>
                                                                <p class="note"> The query submitted to the database to generate the explain plan is not exactly the same as that executed by the runtime. The explain plan query will show the literal version of the current host field values, rather than the prepared SQL markers used by the runtime.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;lf &lt;prefix&gt;</p>
                                                            </td>
                                                            <td>
                                                                <p>List fields defined.</p>
                                                                <p>This command displays a full screen listing of all the fields used by the program and their current value. If the program is currently in a procedure that contains local fields those fields are displayed first preceded by their current procedure name. This is to distinguish local fields from global fields of the same name.</p>
                                                                <p>Optionally a prefix can be supplied to list only those fields beginning with that prefix.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;ll</p>
                                                            </td>
                                                            <td>
                                                                <p>List loaded component libraries.</p>
                                                                <p>This command displays a full screen listing of all the loaded component libraries.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;lo &lt;prefix&gt;</p>
                                                            </td>
                                                            <td>
                                                                <p>List objects defined and status.</p>
                                                                <p>This command displays a full screen listing of all objects and their current status in the program.</p>
                                                                <p>The status can be one of the following:</p>
                                                                <ul class="nest_list_bold">
                                                                    <li>
                                                                        <p>OPEN</p>
                                                                        <p>The file is open</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>IDX-n</p>
                                                                        <p>The index <span class="field_value">n</span> has been used to access the file (ISAM files only)</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>CLOSED</p>
                                                                        <p>The file is closed</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>FILE-LCK</p>
                                                                        <p>The file is locked</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>REC-LCK</p>
                                                                        <p>A record is presently locked in the file</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>CURR-REC</p>
                                                                        <p>A record is current</p>
                                                                    </li>
                                                                </ul>
                                                                <p>Optionally a prefix can be supplied to list only those objects beginning with that prefix.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;lq</p>
                                                            </td>
                                                            <td>
                                                                <p>List the last SQL command/query generated (RDBMS versions only).</p>
                                                                <p>This displays the last SQL command executed by the RDBMS.</p>
                                                                <p class="note">This can be the last statement executed by the program.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;lqd</p>
                                                            </td>
                                                            <td>
                                                                <p>Show the most recent database-sql query generated.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;lqe</p>
                                                            </td>
                                                            <td>
                                                                <p>Show the explain plan version of the most recent database-sql query performed.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;ls &lt;prefix&gt;</p>
                                                            </td>
                                                            <td>
                                                                <p>List screens/menus/procedures defined.</p>
                                                                <p>This command displays a full screen listing of all the procedures used by the program and the number of times a procedure has been accessed.</p>
                                                                <p>These statistics can be reset to zero at any point by using the <span class="emphasis">;cs</span> command.</p>
                                                                <p>Optionally a prefix can be supplied to list only those procedures beginning with that prefix.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;lw</p>
                                                            </td>
                                                            <td>
                                                                <p>List all watches set.</p>
                                                                <p>This command displays a full screen of all watches currently active in the program.</p>
                                                                <p>Each line in the listing consists of:</p>
                                                                <ul>
                                                                    <li>
                                                                        <p>The field with the active watch.</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>Optionally any operator used to set the watch.</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>The current value of the watch.</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>The current value of the field.</p>
                                                                    </li>
                                                                </ul>
                                                                <p>If the program is currently in a procedure that contains local fields with watches, these field are displayed preceded by their current procedure name. This is to distinguish local fields from global fields of the same name.</p>
                                                                <p>Once a watch is tripped, subsequent <span class="emphasis">;lw</span> listings also shows on the prompt line the last statement in the program to have tripped the watch.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;m</p>
                                                            </td>
                                                            <td>
                                                                <p>Show the current screen mode.</p>
                                                                <p>The mode of the current procedure is displayed (for example, <span class="ui_control">Entry</span>, <span class="ui_control">Correct</span>, <span class="ui_control">Remove</span> or a user-defined mode).</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;q</p>
                                                            </td>
                                                            <td>
                                                                <p>Quit the Command Line debugger.</p>
                                                                <p>The program is terminated. Any open trace file is automatically closed.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;t</p>
                                                            </td>
                                                            <td>
                                                                <p>Give a procedure trace back.</p>
                                                                <p>This command displays a full screen listing of all the procedures called since the commencement of the program in reverse order (that is, <span class="emphasis">main</span> displayed last).</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;tf</p>
                                                            </td>
                                                            <td>
                                                                <p>Turn on/off the program trace file (create/truncate).</p>
                                                                <p>Commence or terminate (from the current statement) a program trace. The trace file is created in your home directory and is named <span class="file_path">program.log</span>, where <span class="emphasis">program</span> is the name of the currently executing file.</p>
                                                                <p>The trace file is created automatically. If it already exists, it is truncated back to zero bytes. The file is automatically closed if the program terminates or reaches the end of execution.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;tfa</p>
                                                            </td>
                                                            <td>
                                                                <p>Turn on/off the program trace file (create/append).</p>
                                                                <p>As per the <span class="emphasis">;tf</span> command. The trace file is created automatically. If it already exists, it is appended to. The file is automatically closed if the program terminates or reaches the end of execution.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;w field &lt;op&gt; &lt;var&gt;</p>
                                                            </td>
                                                            <td>
                                                                <p>Set a watch on a field.</p>
                                                                <p>Watch a field (including local fields) and optionally apply an operation.</p>
                                                                <ul class="nest_list_bold">
                                                                    <li>
                                                                        <p>;w field</p>
                                                                        <p>Watch the field until it changes</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>;w field = value</p>
                                                                        <p>Watch until the field equals the specified value</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>;w field ! = value</p>
                                                                        <p>Watch until the field is not equal to the specified value</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>;w field &lt;&gt; value</p>
                                                                        <p>Same as previous statement</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>;w field &lt; value</p>
                                                                        <p>Watch until the field is less than the specified value</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>;w field &lt;= value</p>
                                                                        <p>Watch until the field is less than or equal to the specified value</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>;w field &gt; value</p>
                                                                        <p>Watch until the field is greater than the specified value</p>
                                                                    </li>
                                                                    <li>
                                                                        <p>;w field &gt;= value</p>
                                                                        <p>Watch until the field is greater than or equal to the specified value</p>
                                                                    </li>
                                                                </ul>
                                                                <p>Setting a watch on a local field can only be done in the procedure in which the local field comes into scope. Once the local field goes out of scope (exited the procedure) the watch entry for the local field is removed.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;wt field &lt;op&gt; &lt;var&gt;</p>
                                                            </td>
                                                            <td>
                                                                <p>Set temporary watch on a field.</p>
                                                                <p>As per the <span class="emphasis">;w</span> command. Once a temporary watch has been triggered by the Command Line debugger it is removed from the watch table.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;z field</p>
                                                            </td>
                                                            <td>
                                                                <p>Clear watch on a field.</p>
                                                                <p>The name of the field must be typed exactly as it appears in the program.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>;za</p>
                                                            </td>
                                                            <td>
                                                                <p>Clear all watches set.</p>
                                                                <p>This command can be issued at any point in a program.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>+&lt;n&gt;</p>
                                                            </td>
                                                            <td>
                                                                <p>Move forward &lt;n&gt; statements.</p>
                                                                <p>Move the currently displayed line forward by &lt;n&gt; statements.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>&lt;down-arrow&gt;</p>
                                                            </td>
                                                            <td>
                                                                <p>Display next statement.</p>
                                                                <p>This does not execute the next statement; it only displays it.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>&lt;field-name&gt;</p>
                                                            </td>
                                                            <td>
                                                                <p>Display current value of field.</p>
                                                                <p>The name of the field must be entered in full.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>&lt;field-name&gt;=&lt;value&gt;</p>
                                                            </td>
                                                            <td>
                                                                <p>Set field to specified value.</p>
                                                                <p>The name of the field must be entered in full. The value assigned to the field must also match its data type (Numeric, String, Date, and so on). When assigning alphanumeric values to fields, they should always be enclosed in single or double quote marks.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>&lt;n&gt;</p>
                                                            </td>
                                                            <td>
                                                                <p>Go to statement &lt;n&gt;.</p>
                                                                <p>Move to the specified statement.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>-&lt;n&gt;</p>
                                                            </td>
                                                            <td>
                                                                <p>Move backwards &lt;n&gt; statements.</p>
                                                                <p>Move the currently displayed line backward by &lt;n&gt; statements.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>&lt;n&gt;;s</p>
                                                            </td>
                                                            <td>
                                                                <p>Step/execute &lt;n&gt; statements.</p>
                                                                <p>If &lt;n&gt; is not specified, the default is to step/execute one statement at a time. If the current or any of the next &lt;n&gt; statements is a procedure, that procedure is also stepped into.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>&lt;n&gt;;sp</p>
                                                            </td>
                                                            <td>
                                                                <p>Step over procedure or statement.</p>
                                                                <p>If &lt;n&gt; is not specified, the default is to step over/execute one statement at a time. If the current or any of the next &lt;n&gt; statements are not procedures, this command will work the same as the <span class="emphasis">;s</span> command.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>&lt;screen-name&gt;</p>
                                                            </td>
                                                            <td>
                                                                <p>Display first statement for screen.</p>
                                                                <p>The name of any defined procedure can be entered here.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>&lt;screen-name&gt;+&lt;n&gt;</p>
                                                            </td>
                                                            <td>
                                                                <p>Display statement &lt;n&gt; for screen.</p>
                                                                <p>The name of any defined procedure and offset can be entered here.</p>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <p>&lt;up-arrow&gt;</p>
                                                            </td>
                                                            <td>
                                                                <p>Display previous statement.</p>
                                                                <p>This does not execute the next statement; it only displays it.</p>
                                                            </td>
                                                        </tr>
                                                    </table>
                                                    <p>Commands are entered on the help line at the <span class="field_value">$</span> prompt. While stepping through each line of code the <span class="field_value">$</span> prompt takes the following form:</p>
                                                    <p class="codeblock">procedure+number: disassembled-line $</p>
                                                    <ul class="nest_list_bold">
                                                        <li>
                                                            <p>procedure</p>
                                                            <p>The procedure associated with the breakpoint.</p>
                                                        </li>
                                                        <li>
                                                            <p>number</p>
                                                            <p>The offset line number from the start of the procedure.</p>
                                                        </li>
                                                        <li>
                                                            <p>disassembled-line</p>
                                                            <p>The disassembled line where the breakpoint is set.</p>
                                                        </li>
                                                    </ul>
                                                    <p>Because the Command Line debugger does <span class="emphasis">not</span> show source code directly from the corresponding SPL file of an operations table, a few points should be made.</p>
                                                    <p>Firstly, comments lines are not stored in an operations table in any way and are consequently never seen while debugging a program.</p>
                                                    <p>Secondly, all macro (#define) functions and constants are expanded during compile-time and stored in-line in the operations table; consequently the Command Line debugger has no knowledge of these directives.</p>
                                                    <p>Lastly, one anomaly should be noted.</p>
                                                    <p>The FOR statement is a single statement and is compiled into an operations table as three separate statements. Consider the following:</p><pre xml:space="preserve"><span class="code_highlight">for</span> x = 1 <span class="code_highlight">to</span> 10
  <span class="code_highlight">message concat</span>('x= ', <span class="code_highlight">str</span>(x))
  <span class="code_highlight">pause</span><span class="code_highlight">end-for</span></pre>
                                                    <p>which is compiled as:</p><pre xml:space="preserve"><span class="code_highlight">set</span> x = 1
<span class="code_highlight">while</span> x &lt; = 10
  <span class="code_highlight">message concat</span>('x= ', <span class="code_highlight">str</span>(x))
  <span class="code_highlight">pause</span><span class="code_highlight">set</span> x = x + 1
<span class="code_highlight">end-while</span></pre>
                                                    <p>The disassembly and trace-file output always shows the latter statements.</p>
                                                    <p>You can clarify commands with the following:</p>
                                                    <ul class="nest_list_bold">
                                                        <li>
                                                            <p>Procedure name</p>
                                                            <p>Any command that makes reference to a procedure name can also mean a screen or menu procedure.</p>
                                                        </li>
                                                        <li>
                                                            <p>Field name</p>
                                                            <p>Any command that makes reference to a field can also mean a local field (only when the local field is in scope), which can optionally include a field <span class="emphasis">occurs</span> subscript. References to field subscripts should be made as per the 4GL language that is to immediately follow the field name by an opening square bracket, the subscript value and a closing square bracket.</p>
                                                            <p class="example">;w dept-total[2]</p>
                                                            <p>If a field containing an <span class="emphasis">occurs</span> range is referenced by a command without specifying a subscript, the subscript will default to <span class="field_value">1</span>.</p>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </div>
                                            <div class="right-content column">
                                                <ul class="in-this-section _Skins__global_sidenav_side_menu mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/Tocs/_local__4gl_reference.js" data-mc-side-menu="True" data-mc-max-depth="-1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="False" data-mc-include-parent="False" data-mc-toc="True">
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                    <!--<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js">
		</script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.15.0/popper.min.js">
		</script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/js/bootstrap.min.js">
		</script>-->
                                    <script src="../../_global/resources/masterpage/sidenav/scripts/jquery.tablesorter.js">
                                    </script>
                                    <script src="../../_global/resources/masterpage/sidenav/scripts/jquery.stickytableheaders.js">
                                    </script>
                                    <script>/* <![CDATA[ */
			$(document).ready(function()
			{
			$("table").tablesorter();
			$("table").stickyTableHeaders();
			
			}
			);
		/* ]]> */</script>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>